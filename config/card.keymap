/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

// Layer definitions

#define BASE 0
#define SYM 1
#define EXT 2
#define FNC 3
#define SYM2 4
#define ACCENT 5
#define SETTINGS 6

// -----------------

&mt {
    //  flavor = "tap-preferred";
    // tapping_term_ms = <200>;
};

&sk {
    ignore-modifiers;
};

/ {
    macros {
        // sometimes my device thinks a modifier is being held down
        // pressing all modifiers fixes it.
    };

    combos {
        compatible = "zmk,combos";

        // both right thumb keys
        // internal-left & external-right thumb keys
        // both left thumb keysnew_combo {};

        Umlaut_OE {
            bindings = <&kp RA(P)>;
            key-positions = <2 3>;
            layers = <0>;
        };

        Umlaut_UE {
            bindings = <&kp RA(Y)>;
            key-positions = <3 4>;
            layers = <0>;
        };

        Umlaut_SS {
            bindings = <&kp RA(S)>;
            key-positions = <1 0>;
            layers = <0>;
        };

        Umlaut_AE {
            bindings = <&kp RA(Q)>;
            key-positions = <1 2>;
            layers = <0>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        // Base alpha layer

        default_layer {
            bindings = <
&kp Q  &kp W  &kp E  &kp R      &kp T    &kp Z  &kp U               &kp I      &kp O       &kp P
&kp A  &kp S  &kp D  &kp F      &kp G    &kp H  &kp J               &kp K      &kp L       &kp SEMICOLON
&kp Y  &kp X  &kp C  &kp V      &kp B    &kp N  &kp M               &kp COMMA  &kp PERIOD  &kp SLASH
                     &kp SPACE  &mo 2    &mo 1  &mt LEFT_SHIFT TAB
            >;
        };

        // Numbers and high frequency symbols

        sym_layer {
            bindings = <
&kp N1           &kp N2        &kp N3     &kp N4       &kp N5       &kp N6                &kp N7                 &kp N8            &kp N9             &kp N0
&kp EXCLAMATION  &kp AT        &kp HASH   &kp PERCENT  &kp CARET    &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp LESS_THAN     &kp GREATER_THAN   &kp SQT
&kp AMPERSAND    &kp ASTERISK  &kp MINUS  &kp PLUS     &kp EQUAL    &kp LEFT_BRACE        &kp RIGHT_BRACE        &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp UNDERSCORE
                                          &mo 3        &mo 4        &trans                &trans
            >;
        };

        // Main modifiers and arrow keys

        ext_layer {
            bindings = <
&kp ESC    &kp LC(LS(TAB))  &kp LC(W)   &kp LC(TAB)  &kp LC(T)    &kp PG_UP  &kp HOME  &kp UP             &kp END    &kp CAPS
&kp LALT   &kp LGUI         &kp LSHIFT  &kp LCTRL    &kp RALT     &kp PG_DN  &kp LEFT  &kp DOWN           &kp RIGHT  &kp BACKSPACE
&kp LC(Z)  &kp LC(X)        &kp LC(C)   &kp TAB      &kp LC(V)    &trans     &trans    &kp LC(BACKSPACE)  &trans     &kp KP_ENTER
                                        &trans       &kp LCTRL    &kp ENTER  &mo 3
            >;
        };

        // Function keys with modifiers

        fnc_layer {
            bindings = <
&kp F1    &kp F2    &kp F3      &kp F4     &kp F5      &kp F6   &kp F7   &kp F8           &kp F9  &kp F10
&kp LALT  &kp LGUI  &kp LSHIFT  &kp LCTRL  &kp RALT    &kp F11  &kp F12  &kp PRINTSCREEN  &trans  &trans
&none     &none     &none       &none      &none       &none    &none    &none            &none   &none
                                &none      &none       &none    &none
            >;
        };

        // Low frequency symbols.
        // Used to change the keyboard's settings.

        settings_layer {
            bindings = <
&bootloader  &none  &none  &bt BT_CLR  &bt BT_SEL 0    &bt BT_SEL 3  &none  &none  &none  &bootloader
&none        &none  &none  &none       &bt BT_SEL 1    &bt BT_SEL 4  &none  &none  &none  &none
&none        &none  &none  &none       &bt BT_SEL 2    &bt BT_SEL 5  &none  &none  &none  &none
                           &none       &none           &none         &none
            >;
        };
    };
};
